name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Set up PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '13'
        postgresql db: tododb
        postgresql user: basselfa
        postgresql password: 1234
    
    - name: Build Backend
      run: |
        cd todo-backend
        # Skip tests during build phase
        ./mvnw clean package -DskipTests
        
    - name: Run Tests with Error Handling
      run: |
        cd todo-backend
        # Run tests with test profile and failure ignore to capture all test results
        ./mvnw test -Dspring.profiles.active=test -Dmaven.test.failure.ignore=true
        
    - name: Check Test Results
      run: |
        cd todo-backend/target/surefire-reports
        echo "Test Report Summary:"
        grep -r "Tests run" --include="*.txt" .
        
    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports
        path: todo-backend/target/surefire-reports
        retention-days: 7
    
    - name: Upload Backend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-artifact
        path: todo-backend/target/*.jar
  
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '14.x'
        cache: 'npm'
        cache-dependency-path: todo-frontend/package-lock.json
    
    - name: Install Dependencies
      run: |
        cd todo-frontend
        npm ci
    
    - name: Build Frontend
      run: |
        cd todo-frontend
        npm run build
    
    - name: Upload Frontend Artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-artifact
        path: todo-frontend/build

  # Uncomment and configure this job when you're ready to deploy
  # deploy:
  #   needs: [build-and-test-backend, build-frontend]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
  #   
  #   steps:
  #   - name: Download Backend Artifact
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: backend-artifact
  #       path: artifacts/backend
  #   
  #   - name: Download Frontend Artifact
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: frontend-artifact
  #       path: artifacts/frontend
  #   
  #   # Add deployment steps here based on your hosting platform
  #   # Examples:
  #   # - For Heroku:
  #   # - name: Deploy to Heroku
  #   #   uses: akhileshns/heroku-deploy@v3.12.14
  #   #   with:
  #   #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #   #     heroku_app_name: your-app-name
  #   #     heroku_email: ${{ secrets.HEROKU_EMAIL }}
  #   
  #   # - For AWS Elastic Beanstalk:
  #   # - name: Deploy to AWS Elastic Beanstalk
  #   #   uses: einaregilsson/beanstalk-deploy@v21
  #   #   with:
  #   #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #   #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #   #     application_name: your-application-name
  #   #     environment_name: your-environment-name
  #   #     version_label: ${{ github.sha }}
  #   #     region: us-east-1
  #   #     deployment_package: artifacts/backend/your-app.jar