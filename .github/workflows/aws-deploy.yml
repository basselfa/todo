name: Deploy to AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'todo-frontend/package-lock.json'
      
      - name: Install frontend dependencies
        run: |
          cd todo-frontend
          npm ci
      
      - name: Build frontend
        run: |
          cd todo-frontend
          npm run build
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to S3
        run: |
          aws s3 sync todo-frontend/build/ s3://${{ secrets.AWS_S3_BUCKET }} --delete
      
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  build-and-deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      
      - name: Build with Maven
        run: |
          cd todo-backend
          mvn -B package --file pom.xml
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name todo-app \
            --version-label "ver-${{ github.sha }}" \
            --source-bundle S3Bucket="${{ secrets.AWS_S3_BUCKET_BACKEND }}",S3Key="todo-backend-0.0.1-SNAPSHOT.jar"
          
          aws elasticbeanstalk update-environment \
            --application-name todo-app \
            --environment-name todo-app-env \
            --version-label "ver-${{ github.sha }}"
        
      - name: Upload backend JAR to S3
        run: |
          aws s3 cp todo-backend/target/todo-backend-0.0.1-SNAPSHOT.jar s3://${{ secrets.AWS_S3_BUCKET_BACKEND }}/