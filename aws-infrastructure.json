{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS resources for Todo application deployment",
  "Parameters": {
    "FrontendBucketName": {
      "Type": "String",
      "Description": "Name for the S3 bucket that will host the frontend"
    },
    "BackendBucketName": {
      "Type": "String",
      "Description": "Name for the S3 bucket that will store backend artifacts"
    },
    "PriceClass": {
      "Type": "String",
      "Default": "PriceClass_100",
      "AllowedValues": ["PriceClass_100", "PriceClass_200", "PriceClass_All"],
      "Description": "CloudFront distribution price class"
    }
  },
  "Resources": {
    "FrontendBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "FrontendBucketName" },
        "AccessControl": "Private",
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": ["*"],
              "AllowedMethods": ["GET"],
              "AllowedOrigins": ["*"],
              "MaxAge": 3000
            }
          ]
        }
      }
    },
    "BackendBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "BackendBucketName" },
        "AccessControl": "Private"
      }
    },
    "CloudFrontOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "OAI for Todo Frontend"
        }
      }
    },
    "FrontendBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "FrontendBucket" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ",
                      { "Ref": "CloudFrontOriginAccessIdentity" }
                    ]
                  ]
                }
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    { "Ref": "FrontendBucket" },
                    "/*"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": ["FrontendBucket", "DomainName"]
              },
              "Id": "S3Origin",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      { "Ref": "CloudFrontOriginAccessIdentity" }
                    ]
                  ]
                }
              }
            }
          ],
          "Enabled": true,
          "DefaultRootObject": "index.html",
          "DefaultCacheBehavior": {
            "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
            "TargetOriginId": "S3Origin",
            "ForwardedValues": {
              "QueryString": false,
              "Cookies": { "Forward": "none" }
            },
            "ViewerProtocolPolicy": "redirect-to-https",
            "MinTTL": 0,
            "DefaultTTL": 3600,
            "MaxTTL": 86400
          },
          "PriceClass": { "Ref": "PriceClass" },
          "CustomErrorResponses": [
            {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ]
        }
      }
    },
    "DeploymentUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": "todo-app-deployment-user",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AmazonS3FullAccess",
          "arn:aws:iam::aws:policy/CloudFrontFullAccess",
          "arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess"
        ]
      }
    },
    "DeploymentUserAccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": { "Ref": "DeploymentUser" }
      }
    },
    "ElasticBeanstalkApplication": {
      "Type": "AWS::ElasticBeanstalk::Application",
      "Properties": {
        "ApplicationName": "todo-app",
        "Description": "Todo application backend"
      }
    },
    "ElasticBeanstalkEnvironment": {
      "Type": "AWS::ElasticBeanstalk::Environment",
      "Properties": {
        "ApplicationName": { "Ref": "ElasticBeanstalkApplication" },
        "EnvironmentName": "todo-app-env",
        "SolutionStackName": "64bit Amazon Linux 2023 v4.3.0 running Corretto 17",
        "OptionSettings": [
          {
            "Namespace": "aws:autoscaling:launchconfiguration",
            "OptionName": "InstanceType",
            "Value": "t2.micro"
          },
          {
            "Namespace": "aws:elasticbeanstalk:environment",
            "OptionName": "EnvironmentType",
            "Value": "SingleInstance"
          }
        ]
      }
    }
  },
  "Outputs": {
    "FrontendBucketName": {
      "Description": "Name of S3 bucket to hold frontend content",
      "Value": { "Ref": "FrontendBucket" }
    },
    "BackendBucketName": {
      "Description": "Name of S3 bucket to hold backend artifacts",
      "Value": { "Ref": "BackendBucket" }
    },
    "CloudFrontDistributionId": {
      "Description": "ID of CloudFront distribution",
      "Value": { "Ref": "CloudFrontDistribution" }
    },
    "CloudFrontDomainName": {
      "Description": "Domain name of CloudFront distribution",
      "Value": { "Fn::GetAtt": ["CloudFrontDistribution", "DomainName"] }
    },
    "AccessKeyId": {
      "Description": "Access Key ID for deployment user",
      "Value": { "Ref": "DeploymentUserAccessKey" }
    },
    "SecretAccessKey": {
      "Description": "Secret Access Key for deployment user",
      "Value": { "Fn::GetAtt": ["DeploymentUserAccessKey", "SecretAccessKey"] }
    },
    "ElasticBeanstalkEnvironmentURL": {
      "Description": "URL of the Elastic Beanstalk environment",
      "Value": { "Fn::GetAtt": ["ElasticBeanstalkEnvironment", "EndpointURL"] }
    }
  }
}