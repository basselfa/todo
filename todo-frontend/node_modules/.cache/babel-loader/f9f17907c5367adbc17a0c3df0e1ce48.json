{"ast":null,"code":"var _jsxFileName = \"/home/basselfa/todo-frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAddTask\n}) => {\n  _s();\n  const [task, setTask] = useState('');\n  const [finishingDate, setFinishingDate] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!task.trim() || !finishingDate) {\n      alert('Bitte füllen Sie alle Felder aus');\n      return;\n    }\n    try {\n      const newTask = {\n        task: task.trim(),\n        finishingDate,\n        completed: false\n      };\n      await onAddTask(newTask);\n      setTask('');\n      setFinishingDate('');\n    } catch (error) {\n      console.error('Fehler beim Hinzufügen:', error);\n      alert('Fehler beim Hinzufügen der Aufgabe');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: finishingDate,\n      onChange: e => setFinishingDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"Bw5PqVz4SyimqLyezaz+gshATwE=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","onAddTask","_s","task","setTask","finishingDate","setFinishingDate","handleSubmit","e","preventDefault","trim","alert","newTask","completed","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/basselfa/todo-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nconst TaskForm = ({ onAddTask }) => {\n  const [task, setTask] = useState('');\n  const [finishingDate, setFinishingDate] = useState('');\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!task.trim() || !finishingDate) {\n      alert('Bitte füllen Sie alle Felder aus');\n      return;\n    }\n    try {\n      const newTask = { task: task.trim(), finishingDate, completed: false };\n      await onAddTask(newTask);\n      setTask('');\n      setFinishingDate('');\n    } catch (error) {\n      console.error('Fehler beim Hinzufügen:', error);\n      alert('Fehler beim Hinzufügen der Aufgabe');\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Task\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        required\n      />\n      <input\n        type=\"date\"\n        value={finishingDate}\n        onChange={(e) => setFinishingDate(e.target.value)}\n        required\n      />\n      <button type=\"submit\">Add Task</button>\n    </form>\n  );\n};\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,CAAC,IAAI,CAACL,aAAa,EAAE;MAClCM,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;IACA,IAAI;MACF,MAAMC,OAAO,GAAG;QAAET,IAAI,EAAEA,IAAI,CAACO,IAAI,CAAC,CAAC;QAAEL,aAAa;QAAEQ,SAAS,EAAE;MAAM,CAAC;MACtE,MAAMZ,SAAS,CAACW,OAAO,CAAC;MACxBR,OAAO,CAAC,EAAE,CAAC;MACXE,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CH,KAAK,CAAC,oCAAoC,CAAC;IAC7C;EACF,CAAC;EACD,oBACEZ,OAAA;IAAMiB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3BlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGb,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEf,aAAc;MACrBgB,QAAQ,EAAGb,CAAC,IAAKF,gBAAgB,CAACE,CAAC,CAACc,MAAM,CAACF,KAAK,CAAE;MAClDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF5B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACzB,EAAA,CArCIF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}