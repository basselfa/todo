{"ast":null,"code":"var _jsxFileName = \"/home/basselfa/todo-frontend/src/components/TasksShownPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TaskList from './TaskList';\nimport './TasksShownPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksShownPage = ({\n  tasks,\n  onDeleteTask,\n  onUpdateTask,\n  onFetchTask,\n  onUpdateTaskCompletion,\n  onUpdateTaskPriority,\n  onUpdateTaskDueDate\n}) => {\n  _s();\n  const history = useHistory();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // Function to handle task refresh\n  const handleRefreshTasks = async () => {\n    setIsRefreshing(true);\n    try {\n      // Call the fetch tasks function passed from App.js\n      await onFetchTask();\n      console.log(\"Tasks refreshed successfully\");\n    } catch (error) {\n      console.error(\"Error refreshing tasks:\", error);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n  const handleBackClick = () => {\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-shown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handleBackClick,\n        children: \"Back to Main Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: handleRefreshTasks,\n        disabled: isRefreshing,\n        children: isRefreshing ? 'Refreshing...' : 'Refresh Tasks'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-content\",\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-tasks\",\n        children: \"No tasks found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onDeleteTask: onDeleteTask,\n        onUpdateTask: onUpdateTask,\n        onFetchTask: onFetchTask,\n        onUpdateTaskCompletion: onUpdateTaskCompletion,\n        onUpdateTaskPriority: onUpdateTaskPriority,\n        onUpdateTaskDueDate: onUpdateTaskDueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksShownPage, \"h8NUCTuErctohmJMwDuX7MHMr90=\", false, function () {\n  return [useHistory];\n});\n_c = TasksShownPage;\nexport default TasksShownPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TasksShownPage\");","map":{"version":3,"names":["React","useState","useHistory","TaskList","jsxDEV","_jsxDEV","TasksShownPage","tasks","onDeleteTask","onUpdateTask","onFetchTask","onUpdateTaskCompletion","onUpdateTaskPriority","onUpdateTaskDueDate","_s","history","isRefreshing","setIsRefreshing","handleRefreshTasks","console","log","error","handleBackClick","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","_c","$RefreshReg$"],"sources":["/home/basselfa/todo-frontend/src/components/TasksShownPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TaskList from './TaskList';\nimport './TasksShownPage.css';\nconst TasksShownPage = ({ \n  tasks, \n  onDeleteTask, \n  onUpdateTask,\n  onFetchTask,\n  onUpdateTaskCompletion,\n  onUpdateTaskPriority,\n  onUpdateTaskDueDate\n}) => {\n  const history = useHistory();\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  \n  // Function to handle task refresh\n  const handleRefreshTasks = async () => {\n    setIsRefreshing(true);\n    try {\n      // Call the fetch tasks function passed from App.js\n      await onFetchTask();\n      console.log(\"Tasks refreshed successfully\");\n    } catch (error) {\n      console.error(\"Error refreshing tasks:\", error);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n  \n  const handleBackClick = () => {\n    history.push('/');\n  };\n  return (\n    <div className=\"tasks-shown-container\">\n      <h2>Task Overview</h2>\n      <div className=\"button-container\">\n        <button className=\"back-button\" onClick={handleBackClick}>\n          Back to Main Page\n        </button>\n        <button \n          className=\"refresh-button\" \n          onClick={handleRefreshTasks}\n          disabled={isRefreshing}\n        >\n          {isRefreshing ? 'Refreshing...' : 'Refresh Tasks'}\n        </button>\n      </div>\n      <div className=\"tasks-content\">\n        {tasks.length === 0 ? (\n          <p className=\"no-tasks\">No tasks found.</p>\n        ) : (\n          <TaskList \n            tasks={tasks} \n            onDeleteTask={onDeleteTask}\n            onUpdateTask={onUpdateTask}\n            onFetchTask={onFetchTask}\n            onUpdateTaskCompletion={onUpdateTaskCompletion}\n            onUpdateTaskPriority={onUpdateTaskPriority}\n            onUpdateTaskDueDate={onUpdateTaskDueDate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default TasksShownPage;;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}