{"ast":null,"code":"var _jsxFileName = \"/home/basselfa/todo-frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAddTask\n}) => {\n  _s();\n  const [task, setTask] = useState('');\n  const [finishingDate, setFinishingDate] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!task.trim() || !finishingDate) {\n      alert('Please fill in all fields');\n      return;\n    }\n    try {\n      const newTask = {\n        task: task.trim(),\n        finishingDate,\n        completed: false\n      };\n      await onAddTask(newTask);\n      setTask('');\n      setFinishingDate('');\n    } catch (error) {\n      console.error('Error adding task:', error);\n      alert('Error adding the task');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Neue Aufgabe eingeben\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: finishingDate,\n        onChange: e => setFinishingDate(e.target.value),\n        className: \"form-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Aufgabe hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_s(TaskForm, \"Bw5PqVz4SyimqLyezaz+gshATwE=\");\n_c = TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskForm","onAddTask","_s","task","setTask","finishingDate","setFinishingDate","handleSubmit","e","preventDefault","trim","alert","newTask","completed","error","console","onSubmit","className","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/basselfa/todo-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nconst TaskForm = ({ onAddTask }) => {\n  const [task, setTask] = useState('');\n  const [finishingDate, setFinishingDate] = useState('');\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!task.trim() || !finishingDate) {\nalert('Please fill in all fields');\n      return;\n    }\n    try {\n      const newTask = { task: task.trim(), finishingDate, completed: false };\n      await onAddTask(newTask);\n      setTask('');\n      setFinishingDate('');\n    } catch (error) {\nconsole.error('Error adding task:', error);\nalert('Error adding the task');\n    }\n  };\nreturn (\n  <form onSubmit={handleSubmit} className=\"task-form container\">\n    <div className=\"form-group\">\n      <input\n        type=\"text\"\n        placeholder=\"Neue Aufgabe eingeben\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        className=\"form-input\"\n        required\n      />\n      <input\n        type=\"date\"\n        value={finishingDate}\n        onChange={(e) => setFinishingDate(e.target.value)}\n        className=\"form-input\"\n        required\n      />\n      <button type=\"submit\" className=\"button\">\n        Aufgabe hinzuf√ºgen\n      </button>\n    </div>\n  </form>\n);\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,CAAC,IAAI,CAACL,aAAa,EAAE;MACxCM,KAAK,CAAC,2BAA2B,CAAC;MAC5B;IACF;IACA,IAAI;MACF,MAAMC,OAAO,GAAG;QAAET,IAAI,EAAEA,IAAI,CAACO,IAAI,CAAC,CAAC;QAAEL,aAAa;QAAEQ,SAAS,EAAE;MAAM,CAAC;MACtE,MAAMZ,SAAS,CAACW,OAAO,CAAC;MACxBR,OAAO,CAAC,EAAE,CAAC;MACXE,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACpBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CH,KAAK,CAAC,uBAAuB,CAAC;IAC1B;EACF,CAAC;EACH,oBACEZ,OAAA;IAAMiB,QAAQ,EAAET,YAAa;IAACU,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAC3DnB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBnB,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,uBAAuB;QACnCC,KAAK,EAAElB,IAAK;QACZmB,QAAQ,EAAGd,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QACzCJ,SAAS,EAAC,YAAY;QACtBO,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QACEoB,IAAI,EAAC,MAAM;QACXE,KAAK,EAAEhB,aAAc;QACrBiB,QAAQ,EAAGd,CAAC,IAAKF,gBAAgB,CAACE,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;QAClDJ,SAAS,EAAC,YAAY;QACtBO,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAEzC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAET,CAAC;AAAC1B,EAAA,CA3CIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}