{"ast":null,"code":"var _jsxFileName = \"/home/basselfa/todo-frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  onAddTask,\n  initialTask\n}) => {\n  _s();\n  const [task, setTask] = useState('');\n  const [finishingDate, setFinishingDate] = useState('');\n  useEffect(() => {\n    if (initialTask) {\n      setTask(initialTask.task);\n      setFinishingDate(initialTask.finishingDate);\n    }\n  }, [initialTask]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!task || !finishingDate) {\n      return;\n    }\n    const updatedTask = {\n      ...initialTask,\n      task,\n      finishingDate,\n      completed: (initialTask === null || initialTask === void 0 ? void 0 : initialTask.completed) || false\n    };\n    try {\n      await onAddTask(updatedTask);\n      setTask('');\n      setFinishingDate('');\n    } catch (error) {\n      console.error('Fehler beim Speichern:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task\",\n      value: task,\n      onChange: e => setTask(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: finishingDate,\n      onChange: e => setFinishingDate(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: initialTask ? 'Update Task' : 'Add Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"v66y19q5j7cLEgQGk5TUFChugGQ=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskForm","onAddTask","initialTask","_s","task","setTask","finishingDate","setFinishingDate","handleSubmit","e","preventDefault","updatedTask","completed","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/basselfa/todo-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TaskForm = ({ onAddTask, initialTask }) => {\n  const [task, setTask] = useState('');\n  const [finishingDate, setFinishingDate] = useState('');\n\n  useEffect(() => {\n    if (initialTask) {\n      setTask(initialTask.task);\n      setFinishingDate(initialTask.finishingDate);\n    }\n  }, [initialTask]);\n\nconst handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!task || !finishingDate) {\n      return;\n    }\n    const updatedTask = { \n      ...initialTask, \n      task, \n      finishingDate, \n      completed: initialTask?.completed || false \n    };\n    try {\n      await onAddTask(updatedTask);\n      setTask('');\n      setFinishingDate('');\n    } catch (error) {\n      console.error('Fehler beim Speichern:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Task\"\n        value={task}\n        onChange={(e) => setTask(e.target.value)}\n        required\n      />\n      <input\n        type=\"date\"\n        value={finishingDate}\n        onChange={(e) => setFinishingDate(e.target.value)}\n        required\n      />\n      <button type=\"submit\">{initialTask ? 'Update Task' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAIK,WAAW,EAAE;MACfG,OAAO,CAACH,WAAW,CAACE,IAAI,CAAC;MACzBG,gBAAgB,CAACL,WAAW,CAACI,aAAa,CAAC;IAC7C;EACF,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEnB,MAAMM,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,IAAI,IAAI,CAACE,aAAa,EAAE;MAC3B;IACF;IACA,MAAMK,WAAW,GAAG;MAClB,GAAGT,WAAW;MACdE,IAAI;MACJE,aAAa;MACbM,SAAS,EAAE,CAAAV,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEU,SAAS,KAAI;IACvC,CAAC;IACD,IAAI;MACF,MAAMX,SAAS,CAACU,WAAW,CAAC;MAC5BN,OAAO,CAAC,EAAE,CAAC;MACXE,gBAAgB,CAAC,EAAE,CAAC;IACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEd,OAAA;IAAMgB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEf,IAAK;MACZgB,QAAQ,EAAGX,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXE,KAAK,EAAEb,aAAc;MACrBc,QAAQ,EAAGX,CAAC,IAAKF,gBAAgB,CAACE,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;MAClDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEd,WAAW,GAAG,aAAa,GAAG;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEX,CAAC;AAACvB,EAAA,CAlDIH,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}