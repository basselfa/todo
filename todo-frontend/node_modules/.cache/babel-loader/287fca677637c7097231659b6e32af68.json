{"ast":null,"code":"var _jsxFileName = \"/home/basselfa/todo-frontend/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport TaskForm from './TaskForm';\nimport TaskPage from './TaskPage';\nimport TasksShownPage from './TasksShownPage';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const history = useHistory();\n\n  // Aufgaben abrufen (Callback-Funktion für Stabilität)\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Fehler beim Abrufen der Aufgaben:', error);\n    }\n  }, []);\n\n  // Daten abrufen und erst dann navigieren\n  const handleFetchTasksClick = async () => {\n    await fetchTasks();\n    history.push('/tasksShown');\n  };\n\n  // Wenn die \"/tasksShown\"-Seite geladen wird, immer erneut abrufen\n  useEffect(() => {\n    if (history.location.pathname === '/tasksShown') {\n      fetchTasks();\n    }\n  }, [fetchTasks, history.location.pathname]);\n  const handleAddTask = async task => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/tasks`, task);\n      setTasks(prevTasks => [...prevTasks, response.data]);\n    } catch (error) {\n      console.error('Fehler beim Hinzufügen einer Aufgabe:', error);\n    }\n  };\n  const handleUpdateTask = async (id, updatedTask) => {\n    try {\n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/tasks/${id}`, updatedTask);\n      setTasks(prevTasks => prevTasks.map(task => task.id === id ? response.data : task));\n    } catch (error) {\n      console.error('Fehler beim Aktualisieren der Aufgabe:', error);\n    }\n  };\n  const handleDeleteTask = async id => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_API_URL}/tasks/${id}`);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Fehler beim Löschen der Aufgabe:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchTasksClick,\n      children: \"Fetch Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        children: /*#__PURE__*/_jsxDEV(TaskPage, {\n          tasks: tasks,\n          onDeleteTask: handleDeleteTask,\n          onUpdateTask: handleUpdateTask,\n          onAddTask: handleAddTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasksShown\",\n        children: /*#__PURE__*/_jsxDEV(TasksShownPage, {\n          tasks: tasks,\n          onDeleteTask: handleDeleteTask,\n          onUpdateTask: handleUpdateTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ix2I6fQDmOjMrmS/QqNRPt7OB34=\", false, function () {\n  return [useHistory];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","BrowserRouter","Router","Route","Switch","useHistory","TaskForm","TaskPage","TasksShownPage","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","history","fetchTasks","response","get","process","env","REACT_APP_API_URL","data","error","console","handleFetchTasksClick","push","location","pathname","handleAddTask","task","post","prevTasks","handleUpdateTask","id","updatedTask","put","map","handleDeleteTask","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddTask","path","onDeleteTask","onUpdateTask","_c","$RefreshReg$"],"sources":["/home/basselfa/todo-frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport TaskForm from './TaskForm';\nimport TaskPage from './TaskPage';\nimport TasksShownPage from './TasksShownPage';\nimport '../App.css';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const history = useHistory();\n\n  // Aufgaben abrufen (Callback-Funktion für Stabilität)\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/tasks`);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Fehler beim Abrufen der Aufgaben:', error);\n    }\n  }, []);\n\n  // Daten abrufen und erst dann navigieren\n  const handleFetchTasksClick = async () => {\n    await fetchTasks();\n    history.push('/tasksShown');\n  };\n\n  // Wenn die \"/tasksShown\"-Seite geladen wird, immer erneut abrufen\n  useEffect(() => {\n    if (history.location.pathname === '/tasksShown') {\n      fetchTasks();\n    }\n  }, [fetchTasks, history.location.pathname]);\n\n  const handleAddTask = async (task) => {\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/tasks`, task);\n      setTasks(prevTasks => [...prevTasks, response.data]);\n    } catch (error) {\n      console.error('Fehler beim Hinzufügen einer Aufgabe:', error);\n    }\n  };\n\n  const handleUpdateTask = async (id, updatedTask) => {\n    try {\n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/tasks/${id}`, updatedTask);\n      setTasks(prevTasks => prevTasks.map(task => (task.id === id ? response.data : task)));\n    } catch (error) {\n      console.error('Fehler beim Aktualisieren der Aufgabe:', error);\n    }\n  };\n\n  const handleDeleteTask = async (id) => {\n    try {\n      await axios.delete(`${process.env.REACT_APP_API_URL}/tasks/${id}`);\n      setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Fehler beim Löschen der Aufgabe:', error);\n    }\n  };\n\nreturn (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <button onClick={handleFetchTasksClick}>Fetch Tasks</button>\n      <TaskForm onAddTask={handleAddTask} />\n      <Switch>\n        <Route path=\"/tasks\">\n          <TaskPage \n            tasks={tasks} \n            onDeleteTask={handleDeleteTask} \n            onUpdateTask={handleUpdateTask} \n            onAddTask={handleAddTask}\n          />\n        </Route>\n        <Route path=\"/tasksShown\">\n          <TasksShownPage \n            tasks={tasks} \n            onDeleteTask={handleDeleteTask} \n            onUpdateTask={handleUpdateTask} \n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}