{"ast":null,"code":"var _jsxFileName = \"/home/basselfa/todo-frontend/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks,\n  onUpdateTask,\n  onDeleteTask\n}) => {\n  _s();\n  const [editingTask, setEditingTask] = useState(null);\n  const handleUpdateClick = task => {\n    setEditingTask(task);\n  };\n  const handleUpdateTask = async updatedTask => {\n    const {\n      id,\n      task,\n      finishingDate,\n      completed\n    } = updatedTask;\n    await onUpdateTask(id, {\n      task,\n      finishingDate,\n      completed\n    });\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      onDeleteTask: onDeleteTask,\n      onUpdateClick: handleUpdateClick\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)), editingTask && /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: handleUpdateTask,\n      initialTask: editingTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"vUyg4d9ntB/IZjAsi+4xqcH9bXA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskItem","TaskForm","jsxDEV","_jsxDEV","TaskList","tasks","onUpdateTask","onDeleteTask","_s","editingTask","setEditingTask","handleUpdateClick","task","handleUpdateTask","updatedTask","id","finishingDate","completed","children","map","onUpdateClick","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","initialTask","_c","$RefreshReg$"],"sources":["/home/basselfa/todo-frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\n\nconst TaskList = ({ tasks, onUpdateTask, onDeleteTask }) => {\n  const [editingTask, setEditingTask] = useState(null);\n\n  const handleUpdateClick = (task) => {\n    setEditingTask(task);\n  };\n\nconst handleUpdateTask = async (updatedTask) => {\n    const { id, task, finishingDate, completed } = updatedTask;\n    await onUpdateTask(id, { task, finishingDate, completed });\n    setEditingTask(null);\n  };\n\n  return (\n    <div>\n      {tasks.map(task => (\n        <TaskItem \n          key={task.id} \n          task={task} \n          onDeleteTask={onDeleteTask} \n          onUpdateClick={handleUpdateClick} \n        />\n      ))}\n      {editingTask && (\n        <TaskForm \n          onAddTask={handleUpdateTask} \n          initialTask={editingTask} \n        />\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMY,iBAAiB,GAAIC,IAAI,IAAK;IAClCF,cAAc,CAACE,IAAI,CAAC;EACtB,CAAC;EAEH,MAAMC,gBAAgB,GAAG,MAAOC,WAAW,IAAK;IAC5C,MAAM;MAAEC,EAAE;MAAEH,IAAI;MAAEI,aAAa;MAAEC;IAAU,CAAC,GAAGH,WAAW;IAC1D,MAAMR,YAAY,CAACS,EAAE,EAAE;MAAEH,IAAI;MAAEI,aAAa;MAAEC;IAAU,CAAC,CAAC;IAC1DP,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEP,OAAA;IAAAe,QAAA,GACGb,KAAK,CAACc,GAAG,CAACP,IAAI,iBACbT,OAAA,CAACH,QAAQ;MAEPY,IAAI,EAAEA,IAAK;MACXL,YAAY,EAAEA,YAAa;MAC3Ba,aAAa,EAAET;IAAkB,GAH5BC,IAAI,CAACG,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CACF,CAAC,EACDf,WAAW,iBACVN,OAAA,CAACF,QAAQ;MACPwB,SAAS,EAAEZ,gBAAiB;MAC5Ba,WAAW,EAAEjB;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CA/BIJ,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}