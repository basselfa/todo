{"version":3,"sources":["components/TaskForm.js","components/TaskPage.js","components/TaskItem.js","components/TaskList.js","components/TasksShownPage.js","components/App.js","index.js"],"names":["TaskForm","_ref","onAddTask","title","setTitle","useState","description","setDescription","priority","setPriority","dueDate","setDueDate","_jsx","onSubmit","async","e","preventDefault","trim","newTask","completed","error","console","alert","className","children","_jsxs","type","placeholder","value","onChange","target","required","htmlFor","id","TaskPage","tasksLoaded","TaskItem","task","onDeleteTask","onUpdateTask","onFetchTask","onUpdateTaskCompletion","onUpdateTaskPriority","onUpdateTaskDueDate","isEditing","setIsEditing","editedTitle","setEditedTitle","editedDescription","setEditedDescription","editedPriority","setEditedPriority","editedDueDate","setEditedDueDate","finishingDate","animate","setAnimate","newPriority","handlePriorityChange","onClick","updatedTask","checked","newCompletionState","setTimeout","style","color","textDecoration","backgroundColor","toUpperCase","getPriorityColor","getDateColor","today","Date","taskDate","toDateString","TaskList","tasks","map","TasksShownPage","history","useHistory","filters","setFilters","dateFilter","dateValue","handleFilterChange","name","prev","handleBackClick","push","applyFilters","apiFilters","dueBefore","dueAfter","clearFilters","length","App","setTasks","setTasksLoaded","loading","setLoading","formatDate","dateString","toISOString","split","fetchTasks","useCallback","arguments","undefined","_window$ENV","url","window","ENV","API_URL","process","_window$ENV2","_window$ENV3","_window$ENV4","_window$ENV5","_window$ENV6","_window$ENV7","_window$ENV8","response","axios","get","data","useEffect","location","pathname","includes","Switch","Route","exact","path","_window$ENV10","post","prevTasks","_window$ENV12","delete","filter","_window$ENV11","put","isCompleted","_window$ENV13","_window$ENV14","patch","_window$ENV15","_window$ENV16","formattedDate","ReactDOM","render","React","StrictMode","Router","document","getElementById"],"mappings":"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","file":"static/js/main.b0b1ea2b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst TaskForm = ({ onAddTask }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('MEDIUM');\n  const [dueDate, setDueDate] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!title.trim() || !dueDate) {\n      alert('Please fill in all required fields');\n      return;\n    }\n    \n    try {\n      const newTask = {\n        title: title.trim(),\n        description: description.trim(),\n        priority,\n        dueDate,\n        completed: false\n      };\n      \n      await onAddTask(newTask);\n      \n      // Reset form\n      setTitle('');\n      setDescription('');\n      setPriority('MEDIUM');\n      setDueDate('');\n    } catch (error) {\n      console.error('Error adding task:', error);\n      alert('Error adding task');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"task-form container\">\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter new task\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"form-input\"\n          required\n        />\n        <textarea\n          placeholder=\"Description (optional)\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"form-input\"\n        />\n        <select\n          value={priority}\n          onChange={(e) => setPriority(e.target.value)}\n          className=\"form-input\"\n        >\n          <option value=\"LOW\">Low</option>\n          <option value=\"MEDIUM\">Medium</option>\n          <option value=\"HIGH\">High</option>\n        </select>\n        <label htmlFor=\"due-date\">Due date</label>\n        <input\n          id=\"due-date\"\n          type=\"date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n          className=\"form-input\"\n          required\n        />\n        <button type=\"submit\" className=\"button\">\n          Add Task\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default TaskForm;","import React from 'react';\nimport TaskForm from './TaskForm';\nconst TaskPage = ({ onAddTask, tasksLoaded }) => {\n  return (\n    <div>\n      <h1>Tasks</h1>\n      <TaskForm onAddTask={onAddTask} />\n      {!tasksLoaded && (\n        <p>Click 'Fetch Tasks' to load tasks</p>\n      )}\n    </div>\n  );\n};\nexport default TaskPage;","import React, { useState } from 'react';\n\nconst TaskItem = ({ \n  task, \n  onDeleteTask, \n  onUpdateTask,\n  onFetchTask,\n  onUpdateTaskCompletion,\n  onUpdateTaskPriority,\n  onUpdateTaskDueDate\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(task.title || task.task);\n  const [editedDescription, setEditedDescription] = useState(task.description);\n  const [editedPriority, setEditedPriority] = useState(task.priority);\n  const [editedDueDate, setEditedDueDate] = useState(task.dueDate || task.finishingDate);\n  const [animate, setAnimate] = useState(false);\n\n  // Handle complete update using the specialized endpoint\n  const handleCompletionChange = async () => {\n    // If task is already completed, call incomplete endpoint, otherwise call complete endpoint\n    const newCompletionState = !task.completed;\n    const result = await onUpdateTaskCompletion(task.id, newCompletionState);\n    if (result) {\n      if (newCompletionState) {\n        // If task is being completed, show animation\n        setAnimate(true);\n        setTimeout(() => {\n          setAnimate(false);\n        }, 1000);\n      }\n    }\n  };\n\n  // Handle priority update using the specialized endpoint\n  const handlePriorityChange = async (newPriority) => {\n    setEditedPriority(newPriority);\n    if (!isEditing) {\n      await onUpdateTaskPriority(task.id, newPriority);\n    }\n  };\n\n  // Handle due date update using the specialized endpoint\n  // eslint-disable-next-line no-unused-vars\n  const handleDueDateChange = async (newDate) => {\n    setEditedDueDate(newDate);\n    if (!isEditing) {\n      await onUpdateTaskDueDate(task.id, newDate);\n    }\n  };\n\n  // Handle full update\n  const handleUpdate = async () => {\n    const updatedTask = {\n      ...task,\n      title: editedTitle,\n      description: editedDescription,\n      priority: editedPriority,\n      dueDate: editedDueDate\n    };\n    \n    await onUpdateTask(task.id, updatedTask);\n    setIsEditing(false);\n  };\n\n  const getPriorityColor = (priority) => {\n    switch(priority.toUpperCase()) {\n      case 'HIGH': return '#f44336';\n      case 'MEDIUM': return '#ff9800';\n      case 'LOW': return '#4caf50';\n      default: return '#757575';\n    }\n  };\n\n  const getDateColor = () => {\n    if (!task.dueDate && !task.finishingDate) return '#757575';\n    \n    const today = new Date();\n    const taskDate = new Date(task.dueDate || task.finishingDate);\n    \n    if (taskDate < today) {\n      return '#f44336'; // Red for overdue tasks\n    } else if (taskDate.toDateString() === today.toDateString()) {\n      return '#ff9800'; // Orange for today's tasks\n    }\n    return '#4caf50'; // Green for future tasks\n  };\n\n  return (\n    <div className={`task-item ${animate ? 'task-completed-animation' : ''}`}>\n      {isEditing ? (\n        <div className=\"task-edit-form\">\n          <input\n            type=\"text\"\n            value={editedTitle}\n            onChange={(e) => setEditedTitle(e.target.value)}\n            className=\"edit-input\"\n            placeholder=\"Task title\"\n          />\n          <textarea\n            value={editedDescription}\n            onChange={(e) => setEditedDescription(e.target.value)}\n            className=\"edit-input\"\n            placeholder=\"Description\"\n          />\n          <select\n            value={editedPriority}\n            onChange={(e) => handlePriorityChange(e.target.value)}\n            className=\"edit-input\"\n          >\n            <option value=\"LOW\">Low</option>\n            <option value=\"MEDIUM\">Medium</option>\n            <option value=\"HIGH\">High</option>\n          </select>\n          <input\n            type=\"date\"\n            value={editedDueDate}\n            onChange={(e) => setEditedDueDate(e.target.value)}\n            className=\"date-input\"\n          />\n          <div className=\"task-actions\">\n            <button className=\"button\" onClick={handleUpdate}>Save</button>\n            <button className=\"button\" onClick={() => setIsEditing(false)}>Cancel</button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"task-view\">\n          <div className=\"task-header\">\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={handleCompletionChange}\n            />\n            <div className=\"task-content\">\n              <span className=\"task-title\" style={{ \n                color: task.completed ? '#757575' : '#212121',\n                textDecoration: task.completed ? 'line-through' : 'none'\n              }}>\n                {task.title || task.task}\n              </span>\n              {task.description && (\n                <p className=\"task-description\">{task.description}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"task-footer\">\n            <div className=\"task-meta\">\n              <span className=\"priority-badge\" style={{ backgroundColor: getPriorityColor(task.priority) }}>\n                {task.priority}\n              </span>\n              <span className=\"task-date\" style={{ color: getDateColor() }}>\n                {task.dueDate || task.finishingDate || 'No due date'}\n              </span>\n            </div>\n            <div className=\"task-actions\">\n              <button className=\"button edit-button\" onClick={() => setIsEditing(true)}>\n                Edit\n              </button>\n              <button className=\"button delete-button\" onClick={() => onDeleteTask(task.id)}>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskItem;","import React from 'react';\nimport TaskItem from './TaskItem';\nconst TaskList = ({ \n  tasks, \n  onDeleteTask, \n  onUpdateTask,\n  onFetchTask,\n  onUpdateTaskCompletion,\n  onUpdateTaskPriority,\n  onUpdateTaskDueDate \n}) => {\n  return (\n    <div className=\"task-list\">\n      {tasks.map(task => (\n        <TaskItem \n          key={task.id} \n          task={task} \n          onDeleteTask={onDeleteTask}\n          onUpdateTask={onUpdateTask}\n          onFetchTask={onFetchTask}\n          onUpdateTaskCompletion={onUpdateTaskCompletion}\n          onUpdateTaskPriority={onUpdateTaskPriority}\n          onUpdateTaskDueDate={onUpdateTaskDueDate}\n        />\n      ))}\n    </div>\n  );\n};\nexport default TaskList;;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TaskList from './TaskList';\nimport './TasksShownPage.css';\n\nconst TasksShownPage = ({ \n  tasks, \n  onDeleteTask, \n  onUpdateTask,\n  onFetchTask,\n  onUpdateTaskCompletion,\n  onUpdateTaskPriority,\n  onUpdateTaskDueDate\n}) => {\n  const history = useHistory();\n  const [filters, setFilters] = useState({\n    priority: '',\n    completed: '',\n    dateFilter: '',\n    dateValue: ''\n  });\n  \n  const handleBackClick = () => {\n    history.push('/');\n  };\n  \n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  const applyFilters = () => {\n    const apiFilters = {};\n    \n    if (filters.priority) {\n      apiFilters.priority = filters.priority;\n    }\n    \n    if (filters.completed !== '') {\n      apiFilters.completed = filters.completed === 'true';\n    }\n    \n    if (filters.dateFilter && filters.dateValue) {\n      switch(filters.dateFilter) {\n        case 'dueDate':\n          apiFilters.dueDate = filters.dateValue;\n          break;\n        case 'dueBefore':\n          apiFilters.dueBefore = filters.dateValue;\n          break;\n        case 'dueAfter':\n          apiFilters.dueAfter = filters.dateValue;\n          break;\n        default:\n          break;\n      }\n    }\n    \n    onFetchTask(apiFilters);\n  };\n  \n  const clearFilters = () => {\n    setFilters({\n      priority: '',\n      completed: '',\n      dateFilter: '',\n      dateValue: ''\n    });\n    onFetchTask(); // Fetch all tasks with no filters\n  };\n\n  return (\n    <div className=\"tasks-shown-container\">\n      <h2>Task Overview</h2>\n      <div className=\"button-container\">\n        <button className=\"back-button\" onClick={handleBackClick}>\n          Back to Main Page\n        </button>\n      </div>\n      \n      <div className=\"filters-container\">\n        <h3>Filter Tasks</h3>\n        <div className=\"filter-row\">\n          <div className=\"filter-group\">\n            <label htmlFor=\"priority\">Priority:</label>\n            <select \n              id=\"priority\" \n              name=\"priority\" \n              value={filters.priority} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Priorities</option>\n              <option value=\"LOW\">Low</option>\n              <option value=\"MEDIUM\">Medium</option>\n              <option value=\"HIGH\">High</option>\n            </select>\n          </div>\n          \n          <div className=\"filter-group\">\n            <label htmlFor=\"completed\">Status:</label>\n            <select \n              id=\"completed\" \n              name=\"completed\" \n              value={filters.completed} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">All Tasks</option>\n              <option value=\"true\">Completed</option>\n              <option value=\"false\">Not Completed</option>\n            </select>\n          </div>\n        </div>\n        \n        <div className=\"filter-row\">\n          <div className=\"filter-group\">\n            <label htmlFor=\"dateFilter\">Date Filter:</label>\n            <select \n              id=\"dateFilter\" \n              name=\"dateFilter\" \n              value={filters.dateFilter} \n              onChange={handleFilterChange}\n            >\n              <option value=\"\">No Date Filter</option>\n              <option value=\"dueDate\">Due On</option>\n              <option value=\"dueBefore\">Due Before</option>\n              <option value=\"dueAfter\">Due After</option>\n            </select>\n          </div>\n          \n          {filters.dateFilter && (\n            <div className=\"filter-group\">\n              <label htmlFor=\"dateValue\">Date:</label>\n              <input \n                type=\"date\" \n                id=\"dateValue\" \n                name=\"dateValue\" \n                value={filters.dateValue} \n                onChange={handleFilterChange}\n              />\n            </div>\n          )}\n        </div>\n        \n        <div className=\"filter-buttons\">\n          <button className=\"apply-button\" onClick={applyFilters}>Apply Filters</button>\n          <button className=\"clear-button\" onClick={clearFilters}>Clear Filters</button>\n        </div>\n      </div>\n      \n      <div className=\"tasks-content\">\n        {tasks.length === 0 ? (\n          <p className=\"no-tasks\">No tasks found.</p>\n        ) : (\n          <TaskList \n            tasks={tasks} \n            onDeleteTask={onDeleteTask}\n            onUpdateTask={onUpdateTask}\n            onFetchTask={onFetchTask}\n            onUpdateTaskCompletion={onUpdateTaskCompletion}\n            onUpdateTaskPriority={onUpdateTaskPriority}\n            onUpdateTaskDueDate={onUpdateTaskDueDate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TasksShownPage;;","import React, { useState, useCallback, useEffect } from 'react';\nimport axios from 'axios';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport TaskPage from './TaskPage';\nimport TasksShownPage from './TasksShownPage';\nimport '../App.css';\nconst App = () => {\nconst [tasks, setTasks] = useState([]);\nconst [tasksLoaded, setTasksLoaded] = useState(false);\n// This loading state is used in the fetchTasks function\n// eslint-disable-next-line no-unused-vars\nconst [loading, setLoading] = useState(false);\nconst history = useHistory();\n\n// Format date to yyyy-MM-dd\nconst formatDate = (dateString) => {\n  if (!dateString) return null;\n  const date = new Date(dateString);\n  return date.toISOString().split('T')[0]; // Returns yyyy-MM-dd\n};\n\n// GET /tasks - Fetch all tasks\nconst fetchTasks = useCallback(async (filters = {}) => {\n  setLoading(true);\n  try {\n    let url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks`;\n    \n    // Apply filters if provided\n    if (filters.priority && filters.completed !== undefined) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/priority/${filters.priority}/status/${filters.completed}`;\n    } else if (filters.priority && filters.dueDate) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/priority/${filters.priority}/due-date/${formatDate(filters.dueDate)}`;\n    } else if (filters.priority) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/priority/${filters.priority}`;\n    } else if (filters.completed !== undefined) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/status/${filters.completed}`;\n    } else if (filters.dueDate) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/due-date/${formatDate(filters.dueDate)}`;\n    } else if (filters.dueBefore) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/due-before/${formatDate(filters.dueBefore)}`;\n    } else if (filters.dueAfter) {\n      url = `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/due-after/${formatDate(filters.dueAfter)}`;\n    }\n    \n    const response = await axios.get(url);\n    setTasks(response.data);\n    setTasksLoaded(true);\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n  } finally {\n    setLoading(false);\n  }\n}, []);\n\n// Add effect to fetch tasks when component mounts\nuseEffect(() => {\n  // Only fetch tasks if we're on the tasks page\n  if (window.location.pathname.includes('/tasksShown')) {\n    fetchTasks(); // Fetch all tasks with no filters initially\n  }\n}, [fetchTasks]);\n\n// GET /tasks/{id} - Fetch a single task\n// eslint-disable-next-line no-unused-vars\nconst fetchTask = async (id) => {\n  try {\n    const response = await axios.get(`${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching task ${id}:`, error);\n    return null;\n  }\n};\n\n// POST /tasks - Create a new task\nconst handleAddTask = async (task) => {\n  try {\n    // Ensure date is formatted correctly\n    if (task.dueDate) {\n      task.dueDate = formatDate(task.dueDate);\n    }\n    const response = await axios.post(`${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks`, task);\n    setTasks(prevTasks => [...prevTasks, response.data]);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    return null;\n  }\n};\n\n// PUT /tasks/{id} - Update a task\nconst handleUpdateTask = async (id, updatedTask) => {\n  try {\n    // Ensure date is formatted correctly\n    if (updatedTask.dueDate) {\n      updatedTask.dueDate = formatDate(updatedTask.dueDate);\n    }\n    const response = await axios.put(`${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}`, updatedTask);\n    setTasks(prevTasks => prevTasks.map(task => (task.id === id ? response.data : task)));\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    return null;\n  }\n};\n\n// DELETE /tasks/{id} - Delete a task\nconst handleDeleteTask = async (id) => {\n  try {\n    await axios.delete(`${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}`);\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n    return true;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    return false;\n  }\n};\n\n// PATCH /tasks/{id}/complete - Update task completion status\nconst handleUpdateTaskCompletion = async (id, isCompleted) => {\n  try {\n    let response;\n    if (isCompleted) {\n      response = await axios.patch(\n        `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}/complete`\n      );\n    } else {\n      response = await axios.patch(\n        `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}/incomplete`\n      );\n    }\n    setTasks(prevTasks => prevTasks.map(task => (task.id === id ? response.data : task)));\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating completion status for task ${id}:`, error);\n    return null;\n  }\n};\n\n// PATCH /tasks/{id}/priority/{priority} - Update task priority\nconst handleUpdateTaskPriority = async (id, priority) => {\n  try {\n    // Ensure priority is one of the valid enum values: LOW, MEDIUM, HIGH\n    if (!['LOW', 'MEDIUM', 'HIGH'].includes(priority)) {\n      console.error('Invalid priority value. Must be LOW, MEDIUM, or HIGH');\n      return null;\n    }\n    \n    const response = await axios.patch(\n      `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}/priority/${priority}`\n    );\n    setTasks(prevTasks => prevTasks.map(task => (task.id === id ? response.data : task)));\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating priority for task ${id}:`, error);\n    return null;\n  }\n};\n\n// PATCH /tasks/{id}/due-date - Update task due date\nconst handleUpdateTaskDueDate = async (id, dueDate) => {\n  try {\n    // Format date as yyyy-MM-dd\n    const formattedDate = formatDate(dueDate);\n    \n    const response = await axios.patch(\n      `${window.ENV?.API_URL || process.env.REACT_APP_API_URL}/tasks/${id}/due-date`,\n      { dueDate: formattedDate }\n    );\n    setTasks(prevTasks => prevTasks.map(task => (task.id === id ? response.data : task)));\n    return response.data;\n  } catch (error) {\n    console.error(`Error updating due date for task ${id}:`, error);\n    return null;\n  }\n};\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <Switch>\n        <Route exact path=\"/\">\n          <button onClick={() => {\n            fetchTasks();\n            history.push('/tasksShown');\n          }} className=\"button\">\n            Fetch Tasks\n          </button>\n          <TaskPage \n            onAddTask={handleAddTask}\n            tasksLoaded={tasksLoaded}\n          />\n        </Route>\n        <Route path=\"/tasksShown\">\n          <TasksShownPage \n            tasks={tasks} \n            onDeleteTask={handleDeleteTask} \n            onUpdateTask={handleUpdateTask}\n            onFetchTask={fetchTasks} \n            onUpdateTaskCompletion={handleUpdateTaskCompletion}\n            onUpdateTaskPriority={handleUpdateTaskPriority}\n            onUpdateTaskDueDate={handleUpdateTaskDueDate}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}